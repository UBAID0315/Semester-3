#include<iostream>
using namespace std;

class Node
{
    public:
        Node *next;
        int data;
        Node(int val)
        {
            data = val;
            next = NULL;
        }
};

class Circular
{
    Node *head;
    int length;
    public:
        Circular()
        {
            head = NULL;
            length = 0;
        }

        void Insert(int val,int pos)
        {
            if (pos == 1)
            {
                Node *n = new Node(val);

                if (length == 0)
                {
                    head = n;
                    n->next = head;
                }
                else
                {
                    Node *curr = head;
                    while (curr->next != head)
                    {
                        curr = curr->next;
                    }
                    curr->next = n;
                    n->next = head;
                    head = n;
                }
            }
            else if(pos < 1 || pos > length + 1)
            {
                cout<<"Invalid"<<endl;
            }
            else if(pos > 1 || pos < length)
            {
                Node *curr = head;
                Node *prev = NULL;

                Node *n = new Node(val);
                
                if (curr->next == head)
                {
                    for (int i = 1; i <= (pos-1); i++)
                    {
                        prev = curr;
                        curr = curr->next;
                    }
                    n->next = curr;
                    prev->next = n;
                }
                else
                {
                    while (curr->next != head)
                    {
                        curr = curr->next;
                    }
                    curr->next = n;
                    n->next = head;
                }
            }
           length++; 
        }
        void print()
        {
            Node *curr = head;
            for (int i = 1; i <= length; i++)
            {
                cout<<curr->data<<endl;
                curr = curr->next;
            }
            
        }
};

int main()
{
    Circular C;

    C.Insert(10,1);
    C.Insert(11,1);
    C.Insert(12,1);
    C.Insert(3,3);
    C.Insert(19,5);

    C.print();   
}
